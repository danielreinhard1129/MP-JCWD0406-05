// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  nama_lengkap    String
  username        String   @unique
  email           String   @unique
  password        String
  refferal_number String
  contact         Int      @default(62)
  alamat          String   @default("")
  point_balance   Int      @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  roleId          Int
  role            Role     @relation(fields: [roleId], references: [id])
}

model Role {
  id    Int    @id @default(autoincrement())
  role  String
  users User[]
}

model Promotor {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  email     String  @unique
  deskripsi String
  nohp      Int     @unique
  event     Event[]
}

model Event {
  id            Int             @id @default(autoincrement())
  promotorId    Int
  event         Promotor        @relation(fields: [promotorId], references: [id])
  event_name    String
  price         Int
  dateTime      DateTime
  location      String
  description   String
  avaliableSeat Int
  banner        String
  category      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  type_category Type_Category[]
  eventCategory EventCategory[]
}

model Type_Category {
  id            Int             @id @default(autoincrement())
  eventId       Int
  event         Event           @relation(fields: [eventId], references: [id])
  name_category String
  eventCategory EventCategory[]
}

model EventCategory {
  id             Int           @id @default(autoincrement())
  typeCategoryId Int
  type_category  Type_Category @relation(fields: [typeCategoryId], references: [id])
  eventId        Int
  event          Event         @relation(fields: [eventId], references: [id])
}
